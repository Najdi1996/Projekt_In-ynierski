{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/kalendarz/kalendarz.component.ts","./src/app/kalendarz/kalendarz.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/services/user.service.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { MainComponent } from './main/main.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { KalendarzComponent } from './kalendarz/kalendarz.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',  redirectTo:'/user/login', pathMatch:'full'},\r\n  {\r\n    path:'user', component:UserComponent,\r\n    \r\n    children:[\r\n      {path:'registration', component:RegistrationComponent},\r\n      {path:'login', component:LoginComponent}\r\n    ]\r\n  },\r\n  {path: 'home', component:HomeComponent,\r\n\r\n  children:[\r\n    {path:'',  redirectTo:'main', pathMatch:'full'},\r\n    {path: 'kalendarz', component:KalendarzComponent},\r\n    {path: 'main', component:MainComponent}\r\n  ]\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-app';\r\n}\r\n","<router-outlet></router-outlet>\r\n<button [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Do Home</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { UserService } from './services/user.service';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { KalendarzComponent } from './kalendarz/kalendarz.component';\r\nimport { MainComponent } from './main/main.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\t\t\t\r\n    AppComponent,\r\n    UserComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    KalendarzComponent,\r\n    MainComponent\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      progressBar: true\r\n    }),\r\n    FormsModule\r\n  ],\r\n  providers: [UserService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav>\r\n    <button [routerLink]=\"['kalendarz']\" routerLinkActive=\"router-link-active\" >Kalendarz</button>\r\n    <button type=\"button\">Logout</button>\r\n    <a [routerLink]=\"['kalendarz']\" routerLinkActive=\"router-link-active\" >Kalendarz</a>\r\n    <a type=\"button\">Logout</a>\r\n</nav>\r\n<div class=\"content\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-kalendarz',\n  templateUrl: './kalendarz.component.html',\n  styleUrls: ['./kalendarz.component.scss']\n})\nexport class KalendarzComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  kalendarz works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  main works!\n</p>\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup} from '@angular/forms';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private fb:FormBuilder, private http:HttpClient) { }\r\n  readonly BaseURI= 'https://refereeapplication.azurewebsites.net'\r\n\r\n  formModel = this.fb.group({\r\n    UserName : ['', Validators.required],\r\n    Email : ['', Validators.email],\r\n    FullName : [''],\r\n    Passwords: this.fb.group({\r\n      Password : ['', [Validators.required, Validators.minLength(4)]],\r\n    ConfirmPassword : ['', Validators.required]\r\n    },{validator: this.comparePasswords})\r\n    \r\n  });\r\n\r\n  comparePasswords(fb: FormGroup){\r\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n    //passwordMismatch\r\n    //confirmPswrdCtrl.errors={passwordMismatch:true}\r\n    if(confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors){\r\n      if(fb.get('Password').value!= confirmPswrdCtrl.value)\r\n      confirmPswrdCtrl?.setErrors({passwordMismatch:true});\r\n      else\r\n      confirmPswrdCtrl?.setErrors(null);\r\n    }\r\n  }\r\n\r\n  register(){\r\n    var body = {\r\n      UserName: this.formModel.value.UserName,\r\n      Email: this.formModel.value.Email,\r\n      FullName: this.formModel.value.FullName,\r\n      Password: this.formModel.value.Passwords.Password\r\n    };\r\n   return this.http.post(this.BaseURI+'/api/ApplicationUser/Register',body);\r\n  }\r\n\r\n  login(formData: any){\r\n    return this.http.post(this.BaseURI+'/api/ApplicationUser/Login', formData);\r\n  }\r\n}\r\n","import { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styles: []\r\n})\r\nexport class LoginComponent implements OnInit {\r\nformModel={\r\n  UserName : '',\r\n  Password : ''\r\n}\r\n  constructor(private service:UserService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm){\r\n    this.service.login(form.value).subscribe(\r\n      (res:any)=>{\r\n        localStorage.setItem('token' , res.token);\r\n        this.router.navigateByUrl('/home');\r\n      },\r\n      err => {\r\n        if(err.status == 400)\r\n        this.toastr.error('Incorrect username or password', 'Authentication failed');\r\n        else\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form #form='ngForm' class=\"mg-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\r\n    <div class=\"form-group\">\r\n        <label>Nazwa użytkownika</label>\r\n        <input class=\"form-control\" #UserName=\"ngModel\" name=\"UserName\" [(ngModel)]=\"formModel.UserName\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Hasło</label>\r\n        <input type=\"password\" class=\"form-control\" #Password=\"ngModel\" name=\"Password\" [(ngModel)]=\"formModel.Password\" required>\r\n    </div>\r\n    <label class=\"container\">\r\n        <input type=\"checkbox\">\r\n        <span class=\"checkmark\"></span>\r\n     </label>\r\n    <h2 class=\"zapamietajhaslo\">Pamiętaj mnie</h2>\r\n    <p class=\"zapomnianehaslo\">Zapomniałeś hasła?</p>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-8 offset-md-2\">\r\n            <button type=\"submit\" class=\"logowanie\" [disabled]=\"form.invalid\">Zaloguj się</button>\r\n        </div>\r\n    </div>\r\n    <footer>\r\n        <p>Nie masz konta? Dołącz do nas już dziś!</p>\r\n    </footer>\r\n</form>","import { UserService } from '../../services/user.service';\r\nimport { Component, OnInit} from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  constructor( public service: UserService, private toastr:ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.formModel.reset();\r\n  }\r\n  onSubmit(){\r\n    this.service.register().subscribe(\r\n      (res:any) => {\r\n        if(res.succeeded){\r\n          this.service.formModel.reset();\r\n          this.toastr.success('New user created!', 'Registration successful')\r\n        }\r\n        else \r\n        {\r\n          res.errors.forEach((element: {\r\n            description: any; code: any; \r\n}) => {\r\n            switch(element.code){\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('UserName is already taken' , 'Registration failed');\r\n              \r\n              break;\r\n\r\n              default:\r\n                this.toastr.error(element.description, 'Registration failed');\r\n              break;\r\n            }\r\n          })\r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","    <form [formGroup]=\"service.formModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n            <div class=\"form-group required\">\r\n                <label>Nazwa użytkownika</label>\r\n                <input class=\"form-control\" formControlName=\"UserName\">\r\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('UserName')?.touched && service.formModel.get('UserName')?.errors?.required\">To pole jest obowiązkowe</label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>E-mail</label>\r\n                <input class=\"form-control\" formControlName=\"Email\">\r\n                <label class=\"text-danger\" *ngIf=\"service.formModel.get('Email')?.touched && service.formModel.get('Email')?.errors?.email\">Niepoprawny adres e-mail</label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Imię i Nazwisko</label>\r\n                <input class=\"form-control\" formControlName=\"FullName\">\r\n            </div>\r\n            <div formGroupName=\"Passwords\">\r\n                <div class=\"form-group required\">\r\n                    <label>Hasło</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"Password\">\r\n                    <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password')?.touched && service.formModel.get('Passwords.Password')?.errors?.required\">To pole jest obowiązkowe</label>\r\n                    <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.Password')?.touched && service.formModel.get('Passwords.Password')?.errors?.minlength\">Minimum 4 znaki</label>\r\n                </div>\r\n                <div class=\"form-group required\">\r\n                    <label>Powtórz hasło</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"ConfirmPassword\">\r\n                    <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword')?.touched && service.formModel.get('Passwords.ConfirmPassword')?.errors?.required\">To pole jest obowiązkowe</label>\r\n                    <label class=\"text-danger\" *ngIf=\"service.formModel.get('Passwords.ConfirmPassword')?.touched && service.formModel.get('Passwords.ConfirmPassword')?.errors?.passwordMismatch\">Hasło nie jest takie same</label>\r\n                </div>\r\n                <label class=\"container\">\r\n                    <input type=\"radio\">\r\n                    <span class=\"checkmark\"></span>\r\n                 </label>\r\n                <h2 class=\"regulamin\">Akceptuje regulamin</h2>\r\n            </div>\r\n            <div class=\"form-row\">\r\n                <div class=\"form-group col-md-8 offset-md-2\">\r\n                    <button type=\"submit\" class=\"rejestracja\" [disabled]=\"!service.formModel.valid\">Dołącz do nas!</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styles: []\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n    <img src=\"/assets/img/Sędzia.jpg\" class=\"str_start\">\r\n    <div class=\"wrapped-div\">\r\n        <div class=\"tab-header\">\r\n            <h1 class=\"witaj\">Witaj ponownie!</h1>\r\n            <h2 class=\"Zaloguj\" routerLink='/user/login' routerLinkActive='active'>Zaloguj się</h2>\r\n            <h2 class=\"Zarejestruj\" routerLink='/user/registration' routerLinkActive='active'>Zarejestruj się</h2>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-10 offset-md-1\">\r\n                <router-outlet>\r\n\r\n                </router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}